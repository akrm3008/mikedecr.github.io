<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PS-881s on Michael DeCrescenzo</title>
    <link>/ps-881/</link>
    <description>Recent content in PS-881s on Michael DeCrescenzo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/ps-881/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Day 3: Analysis</title>
      <link>/ps-881/553-day3-analysis/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/553-day3-analysis/</guid>
      <description>Sarah  “advanced topics” things I plan to do already pipes dplyr tidyverse forcats haven readr tidyr stringr what is the tidy time series thing? hms? regex just explain what it is. Not worth learning and not worth teaching right now text analysis: tm tidytext time series stuff lubridate what other time series packages are out there Stata is maybe better? R as front end rcpp, sql, rpython (rselenium) learning new packages survey analysis Sarah has a good story example!</description>
    </item>
    
    <item>
      <title>Day 3: Analysis</title>
      <link>/ps-881/553-day3-analysis/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/553-day3-analysis/</guid>
      <description>Sarah  “advanced topics” things I plan to do already pipes dplyr tidyverse forcats haven readr tidyr stringr what is the tidy time series thing? hms? regex just explain what it is. Not worth learning and not worth teaching right now text analysis: tm tidytext time series stuff lubridate what other time series packages are out there Stata is maybe better? R as front end rcpp, sql, rpython (rselenium) learning new packages survey analysis Sarah has a good story example!</description>
    </item>
    
    <item>
      <title>Day 2: Graphics</title>
      <link>/ps-881/553-day2-graphics/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/553-day2-graphics/</guid>
      <description>Sarah  why helpful to see what the data look like tell persuasive stories important that you know relevant features of the data shape of the data indicate appropriate modeling  long right tails, logging  Understanding data know thy data unit of analysis number of observations where is there variation units of measurement values within variable missing data relationships among variables summary statistics summary, cor, quantile table() group_by() %&amp;gt;% summarize() group.</description>
    </item>
    
    <item>
      <title>Day 2: Graphics</title>
      <link>/ps-881/811-day2-graphics/</link>
      <pubDate>Thu, 01 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/811-day2-graphics/</guid>
      <description>Sarah  why helpful to see what the data look like tell persuasive stories important that you know relevant features of the data shape of the data indicate appropriate modeling  long right tails, logging  Understanding data know thy data unit of analysis number of observations where is there variation units of measurement values within variable missing data relationships among variables summary statistics summary, cor, quantile table() group_by() %&amp;gt;% summarize() group.</description>
    </item>
    
    <item>
      <title>Day 1: Data in R</title>
      <link>/ps-881/553-day1-data/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/553-day1-data/</guid>
      <description>Sarah  data management loading datasets  foreign vs haven, base vs. readr, readxl (is that right?)  Creating new variables dropping and keeping variables missing data merging and combining appending merging reshaping long and wide aggregating/collapsing saving transformed data for later use! eg if you want to do a state analysis from lower data intermediate logical functions vector ifelse() and atomic if (condition &amp;amp;&amp;amp; condition) {this} else {that} case_when() for when you have lots of things you want to check, and the ifelse() idea gets too bloaty looping  You can You shouldn’t  apply functions  here’s a list of elements perform function on every element individually  what sarah does not have tidy data  https://www.</description>
    </item>
    
    <item>
      <title>Day 1: Data in R</title>
      <link>/ps-881/811-day1-data/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/811-day1-data/</guid>
      <description>Sarah  data management loading datasets  foreign vs haven, base vs. readr, readxl (is that right?)  Creating new variables dropping and keeping variables missing data merging and combining appending merging reshaping long and wide aggregating/collapsing saving transformed data for later use! eg if you want to do a state analysis from lower data intermediate logical functions vector ifelse() and atomic if (condition &amp;amp;&amp;amp; condition) {this} else {that} case_when() for when you have lots of things you want to check, and the ifelse() idea gets too bloaty looping  You can You shouldn’t  apply functions  here’s a list of elements perform function on every element individually  what sarah does not have tidy data  https://www.</description>
    </item>
    
    <item>
      <title>Day 0: R Basics</title>
      <link>/ps-881/811-basics/</link>
      <pubDate>Fri, 01 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/811-basics/</guid>
      <description>sarah  script files what is it editing  simpler ones: Textmade, Notepad++, Intermediate: Sublime, Advanced: Emacs w/ ESS, Vim  how  plan ahead outline project pseudocode search online reuse code identify tools and packages modular documents comments saving work  what to include  metadata: title, author, data directory setup packages data analysis output (graphics, tables, generated quantities)  Commenting code notes to self  don’t overdo it. Better for why something is happening Try to write code that has obvious effects.</description>
    </item>
    
    <item>
      <title>PoliSci 553: Introduction to R</title>
      <link>/ps-881/553-intro/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/553-intro/</guid>
      <description>Introduction Materials for this course are written for graduate students in political science at the University of Wisconsin–Madison. Individuals from wider audiences may find some material here useful, but they should be aware that they are not the intended audience.
 R: the Why As a researcher, you should always be doing automated analysis. That is, your analysis should be controlled by code, rather than spread sheet formulas or drop-down menus.</description>
    </item>
    
    <item>
      <title>PoliSci 811: Introduction to R</title>
      <link>/ps-881/811-intro/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/811-intro/</guid>
      <description>Introduction Materials for this course are written for graduate students in political science at the University of Wisconsin–Madison. Individuals from wider audiences may find some material here useful, but they should be aware that they are not the intended audience.
 R: the Why As a researcher, you should always be doing automated analysis. That is, your analysis should be controlled by code, rather than spread sheet formulas or drop-down menus.</description>
    </item>
    
    <item>
      <title></title>
      <link>/ps-881/553-02-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/ps-881/553-02-basics/</guid>
      <description>sarah  script files what is it editing  simpler ones: Textmade, Notepad++, Intermediate: Sublime, Advanced: Emacs w/ ESS, Vim  how  plan ahead outline project pseudocode search online reuse code identify tools and packages modular documents comments saving work  what to include  metadata: title, author, data directory setup packages data analysis output (graphics, tables, generated quantities)  Commenting code notes to self  don’t overdo it. Better for why something is happening Try to write code that has obvious effects.</description>
    </item>
    
  </channel>
</rss>